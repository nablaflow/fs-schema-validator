name: ci-staging

on:
  push:
    branches:
      - master
  pull_request:

env:
  FORCE_COLOR: 1
  POETRY_VERSION: "1.7.1"

jobs:
  deps:
    name: deps
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          - "3.9.18"
          - "3.10.13"
          - "3.11.7"
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v4
        id: python
        with:
          python-version: ${{ matrix.python-version }}

      - uses: abatilo/actions-poetry@v2
        with:
          poetry-version: ${{ env.POETRY_VERSION }}

      - id: poetry-cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pypoetry/virtualenvs
          key: ${{ runner.os }}-python-${{ steps.python.outputs.python-version }}-poetry-${{ env.POETRY_VERSION }}-lock-${{ hashFiles('poetry.lock') }}

      - run: poetry install
        if: steps.poetry-cache.outputs.cache-hit != 'true'

  # broken, wait for pydantic 2.6.1
  # mypy:
  #   name: mypy
  #   needs:
  #     - deps
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       python-version:
  #         - "3.9.18"
  #         - "3.10.13"
  #         - "3.11.7"
  #   steps:
  #     - uses: actions/checkout@v4

  #     - uses: actions/setup-python@v4
  #       id: python
  #       with:
  #         python-version: ${{ matrix.python-version }}

  #     - uses: abatilo/actions-poetry@v2
  #       with:
  #         poetry-version: ${{ env.POETRY_VERSION }}

  #     - id: poetry-cache
  #       uses: actions/cache@v3
  #       with:
  #         path: |
  #           ~/.cache/pypoetry/virtualenvs
  #         key: ${{ runner.os }}-python-${{ steps.python.outputs.python-version }}-poetry-${{ env.POETRY_VERSION }}-lock-${{ hashFiles('poetry.lock') }}

  #     - run: poetry run mypy .

  pytest:
    name: pytest
    needs:
      - deps
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          - "3.9.18"
          - "3.10.13"
          - "3.11.7"
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v4
        id: python
        with:
          python-version: ${{ matrix.python-version }}

      - uses: abatilo/actions-poetry@v2
        with:
          poetry-version: ${{ env.POETRY_VERSION }}

      - id: poetry-cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pypoetry/virtualenvs
          key: ${{ runner.os }}-python-${{ steps.python.outputs.python-version }}-poetry-${{ env.POETRY_VERSION }}-lock-${{ hashFiles('poetry.lock') }}

      - run: poetry run pytest .
